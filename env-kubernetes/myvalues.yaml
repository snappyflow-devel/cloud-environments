# Override configuration from https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/values.yaml
monocular:
  enabled: false
docker-registry:
  enabled: false
controllerteam:
  enabled: false
controllerworkflow:
  enabled: false
controllercommitstatus:
  enabled: false
controllerrole:
  enabled: false
extensions:
  enabled: false
gcpreviews:
  cronjob:
    enabled: false
gcactivities:
  cronjob:
    enabled: false
  serviceaccount:
    enabled: false
  role:
    enabled: false
  clusterrole:
    enabled: true
gcpods:
  cronjob:
    enabled: false
  serviceaccount:
    enabled: false
  role:
    enabled: false
jenkins:
  Master:
    Image: "jenkinsxio/jenkinsx"
    ImageTag: "0.0.68"
  Agent:
    PodTemplates:
      aws-cdk:
        Name: aws-cdk
        Label: jenkins-aws-cdk
        DevPodPorts: 9229, 3000, 8080, 5005
        volumes:
          - type: Secret
            secretName: jenkins-maven-settings
            mountPath: /root/.m2/
          - type: Secret
            secretName: jenkins-docker-cfg
            mountPath: /home/jenkins/.docker
          - type: Secret
            secretName: jenkins-release-gpg
            mountPath: /home/jenkins/.gnupg
        EnvVars:
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx512m'
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          aws-cdk:
            Image: gcr.io/jenkinsxio/builder-maven-nodejs:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven:
        Name: maven
        Label: jenkins-maven
        DevPodPorts: 5005, 8080
        # annotations:
        #   iam.amazonaws.com/role: arn:aws:iam::accountid:role/rolename
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-Java11:
        Name: maven-java11
        Label: jenkins-maven-java11
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/

          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven-java11:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-GraalVM:
        Name: maven-graalvm
        Label: jenkins-maven-graalvm
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx1800m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/

          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven-graalvm:0.1.560
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "2Gi"
            LimitCpu: "1"
            LimitMemory: "3Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Gradle:
        Name: gradle
        Label: jenkins-gradle
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Gradle:
            Image: gcr.io/jenkinsxio/builder-gradle:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Scala:
        Name: scala
        Label: jenkins-scala
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Scala:
            Image: gcr.io/jenkinsxio/builder-scala:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Go:
        Name: go
        Label: jenkins-go
        DevPodPorts: 2345, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Go:
            Image: gcr.io/jenkinsxio/builder-go:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "600Mi"
            LimitCpu: "1"
            LimitMemory: "1448Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Terraform:
        Name: terraform
        Label: jenkins-terraform
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Terraform:
            Image: gcr.io/jenkinsxio/builder-terraform:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "600Mi"
            LimitCpu: "1"
            LimitMemory: "1448Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Rust:
        Name: rust
        Label: jenkins-rust
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Rust:
            Image: gcr.io/jenkinsxio/builder-rust:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Newman:
        Name: newman
        Label: jenkins-newman
        DevPodPorts: 9229, 3000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Newman:
            Image: gcr.io/jenkinsxio/builder-newman:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs8x:
        Name: nodejs8x
        # ServiceAccount: fooo
        Label: jenkins-nodejs8x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs8x:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs10x:
        Name: nodejs10x
        # ServiceAccount: fooo
        Label: jenkins-nodejs10x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs10x:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs:
        Name: nodejs
        # ServiceAccount: fooo
        Label: jenkins-nodejs
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-Nodejs:
        Name: maven-nodejs
        # ServiceAccount: fooo
        Label: jenkins-maven-nodejs
        DevPodPorts: 9229, 3000, 8080, 5005
        volumes:
          - type: Secret
            secretName: jenkins-maven-settings
            mountPath: /root/.m2/
          - type: Secret
            secretName: jenkins-docker-cfg
            mountPath: /home/jenkins/.docker
          - type: Secret
            secretName: jenkins-release-gpg
            mountPath: /home/jenkins/.gnupg
        EnvVars:
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          MavenNodejs:
            Image: gcr.io/jenkinsxio/builder-maven-nodejs:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      JX-base:
        Name: jx-base
        Label: jenkins-jx-base
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          JX-base:
            Image: gcr.io/jenkinsxio/builder-jx:0.1.569
            Privileged: true
            RequestCpu: "200m"
            RequestMemory: "256Mi"
            LimitCpu: "400m"
            LimitMemory: "512Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Promote:
        Name: promote
        Label: jenkins-promote
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Promote:
            Image: gcr.io/jenkinsxio/builder-jx:0.1.569
            Privileged: true
            RequestCpu: "200m"
            RequestMemory: "100Mi"
            LimitCpu: "400m"
            LimitMemory: "200Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Packer:
        Name: packer
        Label: jenkins-packer
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Packer:
            Image: hashicorp/packer:1.4.1
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python2:
        Name: python2
        # ServiceAccount: fooo
        Label: jenkins-python2
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python2:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python:
        Name: python
        # ServiceAccount: fooo
        Label: jenkins-python
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python37:
        Name: python37
        # ServiceAccount: fooo
        Label: jenkins-python37
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python37:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Ruby:
        Name: ruby
        # ServiceAccount: fooo
        Label: jenkins-ruby
        DevPodPorts: 1234, 3000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Ruby:
            Image: gcr.io/jenkinsxio/builder-ruby:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Swift:
        Name: swift
        # ServiceAccount: fooo
        Label: jenkins-swift
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Swift:
            Image: gcr.io/jenkinsxio/builder-swift:0.1.569
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Dlang:
        Name: dlang
        Label: jenkins-dlang
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Dlang:
            Image: gcr.io/jenkinsxio/builder-dlang:0.1.569
            Privileged: true
            RequestCpu: "500m"
            RequestMemory: "1024Mi"
            LimitCpu: "1"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Machine-Learning:
        Name: machine-learning
        # ServiceAccount: fooo
        Label: jenkins-machine-learning
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Machine-Learning:
            Image: gcr.io/jenkinsxio/builder-machine-learning:0.1.564
            Privileged: true
            RequestCpu: "2000m"
            RequestMemory: "4Gi"
            LimitCpu: "8000m"
            LimitMemory: "16Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/bash -cl"
            Args: "cat"
            Tty: true
      Machine-Learning-Gpu:
        Name: machine-learning-gpu
        # ServiceAccount: fooo
        Label: jenkins-machine-learning-gpu
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Machine-Learning:
            Image: gcr.io/jenkinsxio/builder-machine-learning-gpu:0.1.564
            Privileged: true
            RequestCpu: "1000m"
            RequestMemory: "1Gi"
            LimitCpu: "2000m"
            LimitMemory: "2Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/bash -cl"
            Args: "cat"
            Tty: true
PipelineSecrets:
  MavenSettingsXML: |-
    <settings>
        <!-- sets the local maven repository outside of the ~/.m2 folder for easier mounting of secrets and repo -->
        <localRepository>${user.home}/.mvnrepository</localRepository>
        <!-- lets disable the download progress indicator that fills up logs -->
        <interactiveMode>false</interactiveMode>
        <mirrors>
            <mirror>
            <id>nexus</id>
            <mirrorOf>external:*</mirrorOf>
            <url>http://nexus:8081/repository/maven-group/</url>
            </mirror>
        </mirrors>
        <servers>
            <server>
            <id>nexus</id>
            <username>admin</username>
            <password>admin123</password>
        </server>
        <server>
            <id>oss-sonatype-staging</id>
            <username></username>
            <password></password>
            </server>
        </servers>
        <profiles>
            <profile>
                <id>nexus</id>
                <properties>
                    <altDeploymentRepository>nexus::default::http://nexus/repository/maven-snapshots/</altDeploymentRepository>
                    <altReleaseDeploymentRepository>nexus::default::http://nexus/repository/maven-releases/</altReleaseDeploymentRepository>
                    <altSnapshotDeploymentRepository>nexus::default::http://nexus/repository/maven-snapshots/</altSnapshotDeploymentRepository>
                </properties>
            </profile>
            <profile>
                <id>release</id>
                <properties>
                    <gpg.executable>gpg</gpg.executable>
                    <gpg.passphrase>mysecretpassphrase</gpg.passphrase>
                </properties>
            </profile>
        </profiles>
        <activeProfiles>
            <!--make the profile active all the time -->
            <activeProfile>nexus</activeProfile>
        </activeProfiles>
    </settings>
